#version 330 core

// Interpolated values from the vertex shaders
in vec2 UV;
in vec3 Position_worldspace;
in vec3 Normal_cameraspace;
in vec3 EyeDirection_cameraspace;
in vec3 LightDirection_cameraspace;
in vec3 Position;

// Ouput data
out vec4 color;

// Values that stay constant for the whole mesh.
uniform samplerCube texture0;
uniform vec3 CameraPosition;
uniform mat4 MV;

void main(){

	vec3 I = normalize(Position - CameraPosition) ;
    vec3 RE = reflect(I, normalize(Normal_cameraspace)) * vec3(1, 1, -1);

    color =  vec4(texture(texture0, RE).rgb, 1.0);
}
